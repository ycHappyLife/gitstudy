git config --global user.name "xxx";
git config --global user.email "xxx";

git init    # 创建库
git add filename    #将新增或者修改内容添加到暂存区
git commint -m "提交的注释内容"   #把文件提交到仓库
git status    # 查看是否有文件未提交
git diff    # 未提交文件和已提交版本对比
git log    # 查看提交日志
git log –oneline    # 日志一行行显示
git reset --hard HEAD^    # 退回上一版本
git reset --hard 版本号    # 回复到指定版本
git reflog    # 查看回退版本号
git checkout -- readme.txt    # 撤销修改,恢复被删除文件
git remote add origin https://github.com/xxx/testgit.git    # 把已有本地仓库与github仓库关联，然后把本地仓库的内容推送到github仓库
git push origin master    # 把本地master分支最新修改推送到github
git clone https://xxx    # 克隆github库至本地
git checkout -b dev    # 创建并切换分支
git branch    # 查看分支，当前分支前会有一个*号
git merge name    # 合并分支到当前分支上
git branch -d name    # 删除分支
git merge --no-ff -m "merge with no-ff" dev # 合并dev分支 --no-ff禁用fast forward
git log --graph --oneline --abbrev-commit    # 查看被删除分支
git stash    # 将当前工作内容隐藏
git stash list    # 查看已隐藏内容
git stash apply    # 恢复
git stash pop    # 恢复的同时删除隐藏内容
git stash drop    # 删除隐藏内容

